[
  {
    "objectID": "preprocessing.html#revise-nexus-files",
    "href": "preprocessing.html#revise-nexus-files",
    "title": "Preprocessing",
    "section": "Revise Nexus Files",
    "text": "Revise Nexus Files\nThe function nexus_label_swap() edits the Nexus file to move the descriptive text with each sample to the label position to be shown as tip labels. The revised file is saved with a _rev added to the end.\n\n\nHide code\ntree_files <- list.files(here(\"local/paktrees\"))\n\n# swap labels\nfor(i in 1:length(tree_files)){\n  nexus_label_swap(here(\"local/paktrees\", tree_files[i]))\n}\n\n\n\nView Tree\nTree visualization to confirm nexus_label_swap() worked\n\n\nHide code\n# list of revised nexus files\ntree_files <- list.files(here(\"local/paktrees\"), pattern=\"_rev\\\\.nex$\")\n\n# choose a tree\ntree_tmp <- read.nexus(here(\"local/paktrees\", tree_files[4]))\n\n\n\n\nHide code\nplot_tree_serotype(tree_tmp)\n\n\n\n\n\nFigure 1: Figure is only a test plot to verify labels were correctly swapped in the Nexus file, but represents Segment 3D."
  },
  {
    "objectID": "preprocessing.html#geography",
    "href": "preprocessing.html#geography",
    "title": "Preprocessing",
    "section": "Geography",
    "text": "Geography\nExtract, clean, and join geographic coordinates. The function convert_dms_to_dd() was coded to clean special characters and mistyped text from the raw file before conversion.\n\n\nHide code\nfarm_file <- read.csv(here(\"local/farm_clean.csv\"))\n\nfarm_file  <- farm_file %>%\n  mutate(coord_x = as.numeric(sapply(coord_x, convert_dms_to_dd)),\n         coord_y = as.numeric(sapply(coord_y, convert_dms_to_dd)))\n\nfarms_locs <- farm_file %>%\n  filter(farm_code != \"\")\n\n\n\nFormat data for mapping\nThe function calculate_bounding_box() helps with conversion and padding dtermination for the map.\n\n\nHide code\n# use api to access background maps  \nmap_api <- yaml::read_yaml(here(\"local\", \"secrets.yaml\"))\nregister_stadiamaps(key = map_api$stadi_api)\n# has_stadiamaps_key()\n\nbbox <- calculate_bounding_box(farms_locs, 1)\n\nbbox_coords <- c(left = bbox$min_lon, bottom = bbox$min_lat, \n                 right = bbox$max_lon, top = bbox$max_lat)\n\nbackground_map <- get_map(location = bbox_coords, \n                          source = \"stadia\", maptype = \"stamen_terrain\")\n\n\nℹ © Stadia Maps © Stamen Design © OpenMapTiles © OpenStreetMap contributors.\n\n\n\n\nFarm Locations (1)\n\n\nHide code\nplot_study_area(background_map, farms_locs)\n\n\n\n\n\n\n\nFarm Locations (2)\nTry a different background\n\n\nHide code\nnew_background <- get_map(location = bbox_coords, \n                          source = \"stadia\", maptype = \"stamen_toner\")\n\nplot_study_area(new_background, farms_locs)"
  },
  {
    "objectID": "preprocessing.html#data-summary",
    "href": "preprocessing.html#data-summary",
    "title": "Preprocessing",
    "section": "Data Summary",
    "text": "Data Summary\nData wrangling to summarize subclinical cases. The convert_dates() function is used to standardize dates recorded using different formats.\n\n\nHide code\nall_serotypes_tree <- read.nexus(here(\"local/paktrees\", tree_files[5]))\n\nsero_df <- as.data.frame(\n  all_serotypes_tree$tip.label\n)\n\nnames(sero_df) <- \"label\"\n\n# get animal and sample number from tip label\nsero_df <- sero_df  %>%\n  filter(str_count(label, \"/\") >= 4) %>%\n  mutate(parts = str_split(label, \"/\")) %>%\n  mutate(string = sapply(parts, function(x) if (length(x) > 3) x[4] else NA)) %>%\n  mutate(animal = as.integer(\n    if_else(str_detect(string, \"-\"), word(string, 1, sep = \"-\"), string))) %>%\n  mutate(sample = if_else(str_detect(string, \"-\"), word(string, 2, sep = \"-\"), NA_character_)) %>%\n  select(-parts)\n\n# fix mixed date formats\nfarm_file <- farm_file  %>%\n mutate(across(starts_with(\"samp_date_\"), ~as.Date(convert_dates(.))))\n\n# table by sample and animal\nsamp_date_table <- farm_file %>%\n  select(animal, samp_date_1, samp_date_2, samp_date_3, samp_date_4) %>%\n  pivot_longer(\n    cols = -animal,\n    names_to = \"sample_txt\",\n    values_to = \"samp_date\"\n  ) %>%\n  mutate(sample = substr(sample_txt, 11, 11)) %>%\n  select(-sample_txt)\n\nsero_df <- left_join(sero_df, samp_date_table, by = c(\"animal\", \"sample\"))\n\nfarm_file$farm_code <- with(farms_locs,\n                            farm_code[match(\n                              farm_file$farm_name,\n                              farm_name)])\n\nsero_df$farm_code <- with(farm_file,\n                          farm_code[match(\n                             sero_df$animal,\n                             animal)])\n\nsero_df <- sero_df %>%\n  mutate(status = ifelse(grepl(\"_pro$\", label), \"Subclinical\", \"Clinical\"),\n         serotype = sub(\"/.*\", \"\", label))\n\nsub_only <- sero_df %>%\n  filter(status == \"Subclinical\")\n\nsub_only$serotype <- sub(\"/.*\", \"\", sub_only$label)\n\n\n\nCo-Infected Animals\nThe below table lists samples with sequentially, or concurrent co-infection\n\n\nHide code\ncoinf_set <- sub_only %>%\n  group_by(animal) %>%\n  summarise(Uniq = length(unique(serotype))) %>%\n  filter(Uniq > 1) %>%\n  ungroup()\n\nsub_only %>%\n  filter(animal %in% coinf_set$animal) %>%\n  select(-string) %>%\n  arrange(animal) %>%\n  gt() %>%\n  tab_header(\n    title = md(\"Subclinical Co-Infected Animals\")) %>%\n  tab_options(table.font.size = 10,\n              row_group.font.size = 10,\n              stub.font.size = 10,\n              column_labels.font.size = 12,\n              heading.title.font.size = 16,\n              heading.title.font.weight = \"bold\",\n              column_labels.font.weight = \"bold\",\n              quarto.disable_processing = TRUE)\n\n\n\n\n\n\n  \n    \n      Subclinical Co-Infected Animals\n\n    \n    \n    \n      label\n      animal\n      sample\n      samp_date\n      farm_code\n      status\n      serotype\n    \n  \n  \n    Asia1/PAK/ICT/008-1/2011_pro\n8\n1\n2011-12-28\nA\nSubclinical\nAsia1\n    A/PAK/ICT/008-3/2012_pro\n8\n3\n2012-05-17\nA\nSubclinical\nA\n    A/PAK/ICT/059-1/2012_pro\n59\n1\n2012-10-01\nF\nSubclinical\nA\n    Asia1/PAK/ICT/059-2/2012_pro\n59\n2\n2012-03-14\nF\nSubclinical\nAsia1\n    A/PAK/ICT/168-2/2012_pro\n168\n2\n2012-02-04\nJ\nSubclinical\nA\n    A/PAK/ICT/168-3/2012_pro\n168\n3\n2012-03-07\nJ\nSubclinical\nA\n    Asia1/PAK/ICT/168-1/2012_pro\n168\n1\n2012-07-02\nJ\nSubclinical\nAsia1\n    A/PAK/ICT/177-4/2012_pro\n177\n4\n2012-11-21\nQ\nSubclinical\nA\n    Asia1/PAK/ICT/177-1/2012_pro\n177\n1\n2012-08-02\nQ\nSubclinical\nAsia1\n    A/PAK/ICT/208-1/2012_pro\n208\n1\n2012-02-15\nR\nSubclinical\nA\n    Asia1/PAK/ICT/208-4/2012_pro\n208\n4\n2012-11-27\nR\nSubclinical\nAsia1\n    A/PAK/ICT/229-1/2012_pro\n229\n1\n2012-02-21\nV\nSubclinical\nA\n    Asia1/PAK/ICT/229-4/2012_pro\n229\n4\n2012-03-12\nV\nSubclinical\nAsia1\n    Asia1/PAK/ICT/231-4/2012_pro\n231\n4\n2012-03-12\nV\nSubclinical\nAsia1\n    A/PAK/ICT/231-1/2012_pro\n231\n1\n2012-02-21\nV\nSubclinical\nA\n    A/PAK/ICT/237-1/2012_pro\n237\n1\n2012-02-22\nW\nSubclinical\nA\n    Asia1/PAK/ICT/237-4/2012_pro\n237\n4\n2012-03-12\nW\nSubclinical\nAsia1\n    Asia1/PAK/ICT/272-4/2012_pro\n272\n4\n2012-11-12\nAA\nSubclinical\nAsia1\n    O/PAK/ICT/272-1/2012_pro\n272\n1\n2012-02-29\nAA\nSubclinical\nO\n  \n  \n  \n\n\n\n\n\n\nSubclinical Infections by Serotype and Date\nFigure showing timeline of infections by subclinical animal.\n\n\nHide code\nsero_df_red <- sero_df %>%\n  filter(status == \"Subclinical\")  %>%\n  mutate(animal_farm = paste(farm_code, animal, sep = \": \"))\n\nsero_df_red <- sero_df_red %>%\n  arrange(desc(farm_code), animal) %>%\n  mutate(animal_farm = factor(animal_farm, levels = unique(animal_farm)))\n\nbackground <- sero_df_red %>%\n  group_by(farm_code) %>%\n  summarize(ymin = min(which(levels(animal_farm) %in% animal_farm)) - 0.5,\n            ymax = max(which(levels(animal_farm) %in% animal_farm)) + 0.5) %>%\n  ungroup()\n\npalette_colors <- pals::watlington(length(unique(sero_df_red$farm_code)))\n\n\n\n\nHide code\nggplot() +\n  geom_rect(data = background, aes(xmin = as.Date(\"2011-11-30\"), \n                                   xmax = as.Date(\"2012-12-31\"), \n                                   ymin = ymin, ymax = ymax, \n                                   fill = farm_code), col=\"transparent\", alpha = 0.2) +\n  geom_point(data = sero_df_red, aes(x = samp_date, y = animal_farm, \n                                   color = serotype, shape = serotype), size = 3) + \n  labs(title = \" \",\n       x = \" \",\n       y = \"Animal\",\n       color = \"Serotype\",\n       shape = \"Serotype\",\n       fill = \"Farm\") +\n  theme_minimal() +\n   guides(color = guide_legend(order = 1, nrow = 1, title.position = \"top\", title.hjust = 0.5),\n         shape = guide_legend(order = 1, nrow = 1, title.position = \"top\", title.hjust = 0.5),\n         fill = guide_legend(order = 2, nrow = 3, title.position = \"top\", title.hjust = 0.5)) +\n  scale_y_discrete(labels = function(x) gsub(\".*: \", \"\", x)) +\n  scale_color_brewer(palette = \"Set1\") +\n  scale_fill_manual(values = palette_colors) + \n  theme(plot.margin = unit(c(0.5,0.5,0.5,0.5),\"cm\"),\n        panel.grid.major = element_line(linewidth = 0.15),\n        panel.grid.minor = element_line(linewidth = 0.05),\n        legend.direction = \"horizontal\",\n        legend.position=\"bottom\",\n        strip.text = element_text(size=16, face=\"bold\"),\n        strip.background = element_blank(),\n        legend.key.size = unit(2,\"line\"),\n        legend.key.width = unit(3,\"line\"),\n        legend.text = element_text(size=16, face=\"bold\"),\n        legend.title = element_text(size=18, face=\"bold\"),\n        axis.title.x = element_text(size=18, face=\"bold\"),\n        axis.title.y = element_text(size=22, face=\"bold\"),\n        axis.text.x = element_text(face=\"bold\", size=15, vjust=0.5, \n                                   hjust=0.5, angle=0),\n        axis.text.y = element_text(size=10, face=\"bold\"),\n        plot.title = element_text(size=10, face=\"bold\"),\n        legend.spacing = unit(4, \"cm\"), \n        legend.margin = margin(t = 2, b = 1))"
  },
  {
    "objectID": "preprocessing.html#tree-dates",
    "href": "preprocessing.html#tree-dates",
    "title": "Preprocessing",
    "section": "Tree Dates",
    "text": "Tree Dates\nThe (ugly) code below used to create date files for serotype-specific time calibrated trees in Beast. Dates for clinical samples used as outgroups are queried at GenBank using the custom functions get_isolate_collection_date() and get_accession_date_meta() that search the samples metadata for date related information. The rentrez package is used for metadata retrieval.\n\nQuery NCBI\n\n\nHide code\niso_names <- c(\"A/PAK/KCH/7/2009\", \"A/PAK/ICT/1/2008\", \"A/PAK/ICT/276/2012\", \n               \"A/PAK/SGD/12/2012\", \"A/PAK/PSH/34/2012\", \"A/PAK/FSD/4/2012\")\n\nisolate_dates <- get_isolate_collection_date(iso_names) \n\n\nLoading required package: rentrez\n\n\nHide code\nisolate_dates %>% # only years available...  The middle June 1 will be used for month and day\n  gt()\n\n\n\n\n\n  \n  \n  \n    \n      IsolateName\n      CollectionDate\n    \n  \n  \n    A/PAK/KCH/7/2009\n2009\n    A/PAK/ICT/1/2008\n2008\n    A/PAK/ICT/276/2012\n2012\n    A/PAK/SGD/12/2012\n2012\n    A/PAK/PSH/34/2012\n2012\n    A/PAK/FSD/4/2012\n2012\n  \n  \n  \n\n\n\n\n\nHide code\nacc_numbers <- c(\"KF112900\", \"JF721440\", \"MT981310\", \"MF140445\", \"JN006719\", \n                 \"KM268898\", \"JX170756\", \"MT944981\", \"KR149704\")\n\naccess_meta <- get_accession_date_meta(acc_numbers) # only year for some...\n\naccess_meta %>%\n  gt()\n\n\n\n\n\n  \n  \n  \n    \n      AccessionNumber\n      CollectionDate\n      IsolateName\n      StrainName\n    \n  \n  \n    KF112900\n14-Jan-2009\nA/BAR/2/2009\nNA\n    JF721440\nNA\nNA\nA/KUN/AFG/L1577/2009\n    MT981310\n2012\nA/PAK/6/2012\nNA\n    MF140445\nMar-2017\nAsia1/NIAB/PUN/PAK/203/2016\nNA\n    JN006719\nNA\nAs/SIN/PAK/L5/2008\nNA\n    KM268898\n09-Feb-2013\nTUR/13/2013\nNA\n    JX170756\nFeb-2011\nO/KHI/PAK/41/2011\nNA\n    MT944981\n14-Feb-2016\nO/IRN/9/2016\nNA\n    KR149704\n2010\nO/PAK/1/2010\nNA\n  \n  \n  \n\n\n\n\n\n\nPrepare Serotype APrepare Serotype Asia1Prepare Serotype O\n\n\nCreating dates table for Beast.\n\n\nHide code\ntree_tmp <- read.nexus(here(\"local/paktrees\", tree_files[6]))\n\ntree_tips <- as.data.frame(\n  cbind(\n    label = tree_tmp$tip.label\n  )\n)\n\ndates_file <- sero_df %>%\n  select(label, samp_date)\n\ndates_file <- left_join(tree_tips, dates_file, by=\"label\") \n\ndates_file <- dates_file %>%\n  mutate(samp_date = case_when(\n    label == \"KF112900\" ~ as_date(\"2009-06-01\", format = \"%Y-%m-%d\"),\n    label == \"JF721440\" ~ as_date(\"2009-06-01\", format = \"%Y-%m-%d\"),\n    label == \"MT981310\" ~ as_date(\"2012-06-01\", format = \"%Y-%m-%d\"),\n    \n    label == \"A/PAK/KCH/7/2009\" ~ as_date(\"2009-06-01\", format = \"%Y-%m-%d\"),\n    label == \"A/PAK/ICT/1/2008\" ~ as_date(\"2008-06-01\", format = \"%Y-%m-%d\"),\n    label == \"A/PAK/ICT/276/2012\" ~ as_date(\"2012-06-01\", format = \"%Y-%m-%d\"),\n    \n    label == \"A/PAK/SGD/12/2012\" ~ as_date(\"2012-06-01\", format = \"%Y-%m-%d\"),\n    label == \"A/PAK/PSH/34/2012\" ~ as_date(\"2012-06-01\", format = \"%Y-%m-%d\"),\n    label == \"A/PAK/FSD/4/2012\" ~ as_date(\"2012-06-01\", format = \"%Y-%m-%d\"),\n    \n    TRUE ~ samp_date \n  ))\n\nwrite.table(dates_file, file = here(\"local/fmd_a_dates.tsv\"), \n            sep = \"\\t\", row.names = FALSE, col.names = FALSE, quote = FALSE)\n\n\n\n\nCreating dates table for Beast.\n\n\nHide code\ntree_tmp <- read.nexus(here(\"local/paktrees\", tree_files[7]))\n\ntree_tips <- as.data.frame(\n  cbind(\n    label = tree_tmp$tip.label\n  )\n)\n\ntree_tips <- tree_tips  %>%\n  mutate(parts = str_split(label, \"/\")) %>%\n  mutate(string = sapply(parts, function(x) if (length(x) > 3) x[4] else NA)) %>%\n  mutate(animal = as.integer(\n    if_else(str_detect(string, \"-\"), word(string, 1, sep = \"-\"), string))) %>%\n  mutate(sample = if_else(str_detect(string, \"-\"), word(string, 2, sep = \"-\"), NA_character_)) %>%\n  select(-parts)\n\ndates_lu <- sero_df %>%\n  mutate(date = samp_date) %>%\n  select(label, date) \n\ntree_tips <- left_join(tree_tips, dates_lu, by = c(\"label\"))\n\nis_year <- function(x) {\n  sapply(x, function(y) {\n    if (grepl(\"^[0-9]{4}$\", y)) {\n      year <- as.numeric(y)\n      return(year >= 1950 && year <= 2015)\n    }\n    return(FALSE)\n  })\n}\n\ntree_tips <- tree_tips %>%\n  mutate(\n    label_year = substr(label, nchar(label)-3, nchar(label)),\n    is_year = is_year(label_year),\n    date = ifelse(\n      is_year == TRUE & is.na(date), \n      as.Date(paste(label_year, \"06\", \"01\", sep=\"-\")),\n      date\n    ),\n    date = as.Date(date, origin=\"1970-01-01\")\n  ) %>%\n  select(-c(string, animal, sample, label_year, is_year))\n\ntree_tips <- tree_tips %>%\n  mutate(date = case_when(\n    label == \"MF140445\" ~ as_date(\"2017-03-01\", format = \"%Y-%m-%d\"),\n    label == \"JN006719\" ~ as_date(\"2008-06-01\", format = \"%Y-%m-%d\"),\n    label == \"KM268898\" ~ as_date(\"2013-02-09\", format = \"%Y-%m-%d\"),\n    \n    TRUE ~ date \n  ))\n\nwrite.table(tree_tips, file = here(\"local/beast/asia1_1/fmd_asia1_dates.tsv\"), \n            sep = \"\\t\", row.names = FALSE, col.names = FALSE, quote = FALSE)\n\n\n\n\nCreating dates table for Beast.\n\n\nHide code\ntree_tmp <- read.nexus(here(\"local/paktrees\", tree_files[9]))\n\ntree_tips <- as.data.frame(\n  cbind(\n    label = tree_tmp$tip.label\n  )\n)\n\ntree_tips <- tree_tips  %>%\n  mutate(parts = str_split(label, \"/\")) %>%\n  mutate(string = sapply(parts, function(x) if (length(x) > 3) x[4] else NA)) %>%\n  mutate(animal = as.integer(\n    if_else(str_detect(string, \"-\"), word(string, 1, sep = \"-\"), string))) %>%\n  mutate(sample = if_else(str_detect(string, \"-\"), word(string, 2, sep = \"-\"), NA_character_)) %>%\n  select(-parts)\n\ntree_tips <- left_join(tree_tips, dates_lu, by = c(\"label\"))\n\ntree_tips <- tree_tips %>%\n  mutate(\n    label_year = substr(label, nchar(label)-3, nchar(label)),\n    is_year = is_year(label_year),\n    date = ifelse(\n      is_year == TRUE & is.na(date), \n      as.Date(paste(label_year, \"06\", \"01\", sep=\"-\")),\n      date\n    ),\n    date = as.Date(date, origin=\"1970-01-01\")\n  ) %>%\n  select(-c(string, animal, sample, label_year, is_year))\n\ntree_tips <- tree_tips %>%\n  mutate(date = case_when(\n    label == \"JX170756\" ~ as_date(\"2011-02-01\", format = \"%Y-%m-%d\"),\n    label == \"MT944981\" ~ as_date(\"2016-02-14\", format = \"%Y-%m-%d\"),\n    label == \"KR149704\" ~ as_date(\"2010-01-01\", format = \"%Y-%m-%d\"),\n    \n    TRUE ~ date\n  ))\n\nwrite.table(tree_tips, file = here(\"local/beast/o_1/fmd_0_dates.tsv\"), \n            sep = \"\\t\", row.names = FALSE, col.names = FALSE, quote = FALSE)"
  },
  {
    "objectID": "preprocessing.html#prepare-serotype-asia1",
    "href": "preprocessing.html#prepare-serotype-asia1",
    "title": "Preprocessing",
    "section": "Prepare Serotype Asia1",
    "text": "Prepare Serotype Asia1\nCreating dates table for Beast.\n\n\nHide code\ntree_tmp <- read.nexus(here(\"local/paktrees\", tree_files[7]))\n\ntree_tips <- as.data.frame(\n  cbind(\n    label = tree_tmp$tip.label\n  )\n)\n\ntree_tips <- tree_tips  %>%\n  mutate(parts = str_split(label, \"/\")) %>%\n  mutate(string = sapply(parts, function(x) if (length(x) > 3) x[4] else NA)) %>%\n  mutate(animal = as.integer(\n    if_else(str_detect(string, \"-\"), word(string, 1, sep = \"-\"), string))) %>%\n  mutate(sample = if_else(str_detect(string, \"-\"), word(string, 2, sep = \"-\"), NA_character_)) %>%\n  select(-parts)\n\ndates_lu <- sero_df %>%\n  mutate(date = samp_date) %>%\n  select(label, date) \n\ntree_tips <- left_join(tree_tips, dates_lu, by = c(\"label\"))\n\nis_year <- function(x) {\n  sapply(x, function(y) {\n    if (grepl(\"^[0-9]{4}$\", y)) {\n      year <- as.numeric(y)\n      return(year >= 1950 && year <= 2015)\n    }\n    return(FALSE)\n  })\n}\n\ntree_tips <- tree_tips %>%\n  mutate(\n    label_year = substr(label, nchar(label)-3, nchar(label)),\n    is_year = is_year(label_year),\n    date = ifelse(\n      is_year == TRUE & is.na(date), \n      as.Date(paste(label_year, \"06\", \"01\", sep=\"-\")),\n      date\n    ),\n    date = as.Date(date, origin=\"1970-01-01\")\n  ) %>%\n  select(-c(string, animal, sample, label_year, is_year))\n\ntree_tips <- tree_tips %>%\n  mutate(date = case_when(\n    label == \"MF140445\" ~ as_date(\"2017-03-01\", format = \"%Y-%m-%d\"),\n    label == \"JN006719\" ~ as_date(\"2008-06-01\", format = \"%Y-%m-%d\"),\n    label == \"KM268898\" ~ as_date(\"2013-02-09\", format = \"%Y-%m-%d\"),\n    \n    TRUE ~ date \n  ))\n\nwrite.table(tree_tips, file = here(\"local/beast/asia1_1/fmd_asia1_dates.tsv\"), \n            sep = \"\\t\", row.names = FALSE, col.names = FALSE, quote = FALSE)"
  },
  {
    "objectID": "preprocessing.html#prepare-serotype-o",
    "href": "preprocessing.html#prepare-serotype-o",
    "title": "Preprocessing",
    "section": "Prepare Serotype O",
    "text": "Prepare Serotype O\nCreating dates table for Beast.\n\n\nHide code\ntree_tmp <- read.nexus(here(\"local/paktrees\", tree_files[9]))\n\ntree_tips <- as.data.frame(\n  cbind(\n    label = tree_tmp$tip.label\n  )\n)\n\ntree_tips <- tree_tips  %>%\n  mutate(parts = str_split(label, \"/\")) %>%\n  mutate(string = sapply(parts, function(x) if (length(x) > 3) x[4] else NA)) %>%\n  mutate(animal = as.integer(\n    if_else(str_detect(string, \"-\"), word(string, 1, sep = \"-\"), string))) %>%\n  mutate(sample = if_else(str_detect(string, \"-\"), word(string, 2, sep = \"-\"), NA_character_)) %>%\n  select(-parts)\n\ntree_tips <- left_join(tree_tips, dates_lu, by = c(\"label\"))\n\ntree_tips <- tree_tips %>%\n  mutate(\n    label_year = substr(label, nchar(label)-3, nchar(label)),\n    is_year = is_year(label_year),\n    date = ifelse(\n      is_year == TRUE & is.na(date), \n      as.Date(paste(label_year, \"06\", \"01\", sep=\"-\")),\n      date\n    ),\n    date = as.Date(date, origin=\"1970-01-01\")\n  ) %>%\n  select(-c(string, animal, sample, label_year, is_year))\n\ntree_tips <- tree_tips %>%\n  mutate(date = case_when(\n    label == \"JX170756\" ~ as_date(\"2011-02-01\", format = \"%Y-%m-%d\"),\n    label == \"MT944981\" ~ as_date(\"2016-02-14\", format = \"%Y-%m-%d\"),\n    label == \"KR149704\" ~ as_date(\"2010-01-01\", format = \"%Y-%m-%d\"),\n    \n    TRUE ~ date\n  ))\n\nwrite.table(tree_tips, file = here(\"local/beast/o_1/fmd_0_dates.tsv\"), \n            sep = \"\\t\", row.names = FALSE, col.names = FALSE, quote = FALSE)"
  },
  {
    "objectID": "preprocessing.html#subclinical-summary",
    "href": "preprocessing.html#subclinical-summary",
    "title": "Preprocessing",
    "section": "Subclinical Summary",
    "text": "Subclinical Summary\nData wrangling to summarize subclinical cases. The convert_dates() function is used to standardize dates recorded using different formats.\n\n\nHide code\nall_serotypes_tree <- read.nexus(here(\"local/paktrees\", tree_files[5]))\n\nsero_df <- as.data.frame(\n  all_serotypes_tree$tip.label\n)\n\nnames(sero_df) <- \"label\"\n\n# get animal and sample number from tip label\nsero_df <- sero_df  %>%\n  filter(str_count(label, \"/\") >= 4) %>%\n  mutate(parts = str_split(label, \"/\")) %>%\n  mutate(string = sapply(parts, function(x) if (length(x) > 3) x[4] else NA)) %>%\n  mutate(animal = as.integer(\n    if_else(str_detect(string, \"-\"), word(string, 1, sep = \"-\"), string))) %>%\n  mutate(sample = if_else(str_detect(string, \"-\"), word(string, 2, sep = \"-\"), NA_character_)) %>%\n  select(-parts)\n\n# fix mixed date formats\nfarm_file <- farm_file  %>%\n mutate(across(starts_with(\"samp_date_\"), ~as.Date(convert_dates(.))))\n\n# table by sample and animal\nsamp_date_table <- farm_file %>%\n  select(animal, samp_date_1, samp_date_2, samp_date_3, samp_date_4) %>%\n  pivot_longer(\n    cols = -animal,\n    names_to = \"sample_txt\",\n    values_to = \"samp_date\"\n  ) %>%\n  mutate(sample = substr(sample_txt, 11, 11)) %>%\n  select(-sample_txt)\n\nsero_df <- left_join(sero_df, samp_date_table, by = c(\"animal\", \"sample\"))\n\nfarm_file$farm_code <- with(farms_locs,\n                            farm_code[match(\n                              farm_file$farm_name,\n                              farm_name)])\n\nsero_df$farm_code <- with(farm_file,\n                          farm_code[match(\n                             sero_df$animal,\n                             animal)])\n\nsero_df <- sero_df %>%\n  mutate(status = ifelse(grepl(\"_pro$\", label), \"Subclinical\", \"Clinical\"),\n         serotype = sub(\"/.*\", \"\", label))\n\nsub_only <- sero_df %>%\n  filter(status == \"Subclinical\")\n\nsub_only$serotype <- sub(\"/.*\", \"\", sub_only$label)\n\n\nsave a copy\n\n\nHide code\nsaveRDS(sero_df, here(\"local/assets/sero_df.rds\"))\n\n\n\nCo-Infected Animals\nThe below table lists samples with sequentially, or concurrent co-infection\n\n\nHide code\ncoinf_set <- sub_only %>%\n  group_by(animal) %>%\n  summarise(Infections = length(serotype)) %>%\n  filter(Infections > 1) %>%\n  ungroup() %>%\n  arrange(animal) %>%\n  mutate(Item = row_number()) %>%\n  select(Item, animal, Infections)\n\n\n\n\nHide code\ncoinf_set %>%\n  gt() %>%\n  tab_header(\n    title = md(\"Sampled FMDV by Animal\")) %>%\n  cols_width(starts_with(\"animal\") ~ px(100),\n             starts_with(\"Infections\") ~ px(90),\n             everything() ~ px(95)) %>%\n  tab_options(table.font.size = \"small\",\n              row_group.font.size = \"small\",\n              stub.font.size = \"small\",\n              column_labels.font.size = \"medium\",\n              heading.title.font.size = \"large\",\n              data_row.padding = px(2),\n              heading.title.font.weight = \"bold\",\n              column_labels.font.weight = \"bold\") %>%\n  opt_stylize(style = 6, color = 'gray')  %>%\n  tab_caption(caption = md(\"Table lists subclinical animals sampled to have multiple infections.  May be sequential or coinfections, and may be from the same or different FMDVs. The Infections columns lits the number sampled.  Detailed records for these animals are in the next table.\"))\n\n\n\n\n\n  \n  \n  Table lists subclinical animals sampled to have multiple infections.  May be sequential or coinfections, and may be from the same or different FMDVs. The Infections columns lits the number sampled.  Detailed records for these animals are in the next table.\n\n  \n    \n    \n    \n  \n  \n    \n      Sampled FMDV by Animal\n\n    \n    \n    \n      Item\n      animal\n      Infections\n    \n  \n  \n    1\n8\n2\n    2\n59\n2\n    3\n161\n2\n    4\n168\n3\n    5\n177\n2\n    6\n178\n2\n    7\n183\n2\n    8\n184\n3\n    9\n185\n2\n    10\n189\n3\n    11\n192\n3\n    12\n208\n2\n    13\n229\n2\n    14\n231\n2\n    15\n237\n2\n    16\n254\n2\n    17\n263\n2\n    18\n272\n2\n    19\n277\n2\n    20\n284\n2\n  \n  \n  \n\n\n\n\n\nHide code\nsub_only %>%\n  filter(animal %in% coinf_set$animal) %>%\n  select(-string) %>%\n  arrange(animal) %>%\n  gt() %>%\n  tab_header(\n    title = md(\"Subclinical with Multiple Infections\")) %>%\n  cols_width(starts_with(\"label\") ~ px(250),\n             starts_with(\"animal\") ~ px(90),\n             starts_with(\"sample\") ~ px(90),\n             starts_with(\"farm_code\") ~ px(100),\n             starts_with(\"samp_date\") ~ px(100),\n             everything() ~ px(95)) %>%\n  tab_options(table.font.size = \"small\",\n              row_group.font.size = \"small\",\n              stub.font.size = \"small\",\n              column_labels.font.size = \"medium\",\n              heading.title.font.size = \"large\",\n              data_row.padding = px(2),\n              heading.title.font.weight = \"bold\",\n              column_labels.font.weight = \"bold\") %>%\n  opt_stylize(style = 6, color = 'gray') %>%\n  tab_caption(caption = md(\"Table lists indiviual records for animals sampled to have multiple infections.  Detailed version of previous table showing counts.\"))\n\n\n\n\n\n  \n  \n  Table lists indiviual records for animals sampled to have multiple infections.  Detailed version of previous table showing counts.\n\n  \n    \n    \n    \n    \n    \n    \n    \n  \n  \n    \n      Subclinical with Multiple Infections\n\n    \n    \n    \n      label\n      animal\n      sample\n      samp_date\n      farm_code\n      status\n      serotype\n    \n  \n  \n    Asia1/PAK/ICT/008-1/2011_pro\n8\n1\n2011-12-28\nA\nSubclinical\nAsia1\n    A/PAK/ICT/008-3/2012_pro\n8\n3\n2012-05-17\nA\nSubclinical\nA\n    A/PAK/ICT/059-1/2012_pro\n59\n1\n2012-10-01\nF\nSubclinical\nA\n    Asia1/PAK/ICT/059-2/2012_pro\n59\n2\n2012-03-14\nF\nSubclinical\nAsia1\n    O/PAK/ICT/161-1/2012_pro\n161\n1\n2012-02-02\nJ\nSubclinical\nO\n    O/PAK/ICT/161-2/2012_pro\n161\n2\n2012-03-29\nJ\nSubclinical\nO\n    A/PAK/ICT/168-2/2012_pro\n168\n2\n2012-02-04\nJ\nSubclinical\nA\n    A/PAK/ICT/168-3/2012_pro\n168\n3\n2012-03-07\nJ\nSubclinical\nA\n    Asia1/PAK/ICT/168-1/2012_pro\n168\n1\n2012-07-02\nJ\nSubclinical\nAsia1\n    A/PAK/ICT/177-4/2012_pro\n177\n4\n2012-11-21\nQ\nSubclinical\nA\n    Asia1/PAK/ICT/177-1/2012_pro\n177\n1\n2012-08-02\nQ\nSubclinical\nAsia1\n    Asia1/PAK/ICT/178-2/2012_pro\n178\n2\n2012-03-04\nQ\nSubclinical\nAsia1\n    Asia1/PAK/ICT/178-3/2012_pro\n178\n3\n2012-09-07\nQ\nSubclinical\nAsia1\n    Asia1/PAK/ICT/183-2/2012_pro\n183\n2\n2012-03-04\nQ\nSubclinical\nAsia1\n    Asia1/PAK/ICT/183-1/2012_pro\n183\n1\n2012-08-02\nQ\nSubclinical\nAsia1\n    Asia1/PAK/ICT/184-3/2012_pro\n184\n3\n2012-09-07\nQ\nSubclinical\nAsia1\n    Asia1/PAK/ICT/184-2/2012_pro\n184\n2\n2012-03-04\nQ\nSubclinical\nAsia1\n    Asia1/PAK/ICT/184-1/2012_pro\n184\n1\n2012-08-02\nQ\nSubclinical\nAsia1\n    Asia1/PAK/ICT/185-1/2012_pro\n185\n1\n2012-08-02\nQ\nSubclinical\nAsia1\n    Asia1/PAK/ICT/185-3/2012_pro\n185\n3\n2012-09-07\nQ\nSubclinical\nAsia1\n    Asia1/PAK/ICT/189-2/2012_pro\n189\n2\n2012-04-04\nR\nSubclinical\nAsia1\n    Asia1/PAK/ICT/189-3/2012_pro\n189\n3\n2012-11-07\nR\nSubclinical\nAsia1\n    Asia1/PAK/ICT/189-4/2012_pro\n189\n4\n2012-11-22\nR\nSubclinical\nAsia1\n    Asia1/PAK/ICT/192-4/2012_pro\n192\n4\n2012-11-22\nR\nSubclinical\nAsia1\n    Asia1/PAK/ICT/192-3/2012_pro\n192\n3\n2012-11-07\nR\nSubclinical\nAsia1\n    Asia1/PAK/ICT/192-2/2012_pro\n192\n2\n2012-04-04\nR\nSubclinical\nAsia1\n    A/PAK/ICT/208-1/2012_pro\n208\n1\n2012-02-15\nR\nSubclinical\nA\n    Asia1/PAK/ICT/208-4/2012_pro\n208\n4\n2012-11-27\nR\nSubclinical\nAsia1\n    A/PAK/ICT/229-1/2012_pro\n229\n1\n2012-02-21\nV\nSubclinical\nA\n    Asia1/PAK/ICT/229-4/2012_pro\n229\n4\n2012-03-12\nV\nSubclinical\nAsia1\n    Asia1/PAK/ICT/231-4/2012_pro\n231\n4\n2012-03-12\nV\nSubclinical\nAsia1\n    A/PAK/ICT/231-1/2012_pro\n231\n1\n2012-02-21\nV\nSubclinical\nA\n    A/PAK/ICT/237-1/2012_pro\n237\n1\n2012-02-22\nW\nSubclinical\nA\n    Asia1/PAK/ICT/237-4/2012_pro\n237\n4\n2012-03-12\nW\nSubclinical\nAsia1\n    Asia1/PAK/ICT/254-4/2012_pro\n254\n4\n2012-05-12\nY\nSubclinical\nAsia1\n    Asia1/PAK/ICT/254-1/2012_pro\n254\n1\n2012-02-23\nY\nSubclinical\nAsia1\n    Asia1/PAK/ICT/263-1/2012_pro\n263\n1\n2012-02-28\nZ\nSubclinical\nAsia1\n    Asia1/PAK/ICT/263-4/2012_pro\n263\n4\n2012-10-12\nZ\nSubclinical\nAsia1\n    Asia1/PAK/ICT/272-4/2012_pro\n272\n4\n2012-11-12\nAA\nSubclinical\nAsia1\n    O/PAK/ICT/272-1/2012_pro\n272\n1\n2012-02-29\nAA\nSubclinical\nO\n    Asia1/PAK/ICT/277-1/2012_pro\n277\n1\n2012-02-29\nAA\nSubclinical\nAsia1\n    Asia1/PAK/ICT/277-4/2012_pro\n277\n4\n2012-11-12\nAA\nSubclinical\nAsia1\n    Asia1/PAK/ICT/284-3/2012_pro\n284\n3\n2012-08-28\nZ\nSubclinical\nAsia1\n    Asia1/PAK/ICT/284-1/2012_pro\n284\n1\n2012-01-03\nZ\nSubclinical\nAsia1\n  \n  \n  \n\n\n\n\n\n\n\nSubclinical Infections by Serotype and Date\nFigure showing timeline of infections by subclinical animal.\n\n\nHide code\nsero_df_red <- sero_df %>%\n  filter(status == \"Subclinical\")  %>%\n  mutate(animal_farm = paste(farm_code, animal, sep = \": \"))\n\nsero_df_red <- sero_df_red %>%\n  arrange(desc(farm_code), animal) %>%\n  mutate(animal_farm = factor(animal_farm, levels = unique(animal_farm)))\n\nbackground <- sero_df_red %>%\n  group_by(farm_code) %>%\n  summarize(ymin = min(which(levels(animal_farm) %in% animal_farm)) - 0.5,\n            ymax = max(which(levels(animal_farm) %in% animal_farm)) + 0.5) %>%\n  ungroup()\n\npalette_colors <- pals::watlington(length(unique(sero_df_red$farm_code)))\n\n\n\n\nHide code\nggplot() +\n  geom_rect(data = background, aes(xmin = as.Date(\"2011-11-30\"), \n                                   xmax = as.Date(\"2012-12-31\"), \n                                   ymin = ymin, ymax = ymax, \n                                   fill = farm_code), col=\"transparent\", alpha = 0.2) +\n  geom_point(data = sero_df_red, aes(x = samp_date, y = animal_farm, \n                                   color = serotype, shape = serotype), size = 3) + \n  labs(title = \" \",\n       x = \" \",\n       y = \"Animal\",\n       color = \"Serotype\",\n       shape = \"Serotype\",\n       fill = \"Farm\") +\n  theme_minimal() +\n   guides(color = guide_legend(order = 1, nrow = 1, title.position = \"top\", title.hjust = 0.5),\n         shape = guide_legend(order = 1, nrow = 1, title.position = \"top\", title.hjust = 0.5),\n         fill = guide_legend(order = 2, nrow = 3, title.position = \"top\", title.hjust = 0.5)) +\n  scale_y_discrete(labels = function(x) gsub(\".*: \", \"\", x)) +\n  scale_color_brewer(palette = \"Set1\") +\n  scale_fill_manual(values = palette_colors) + \n  theme(plot.margin = unit(c(0.5,0.5,0.5,0.5),\"cm\"),\n        panel.grid.major = element_line(linewidth = 0.15),\n        panel.grid.minor = element_line(linewidth = 0.05),\n        legend.direction = \"horizontal\",\n        legend.position=\"bottom\",\n        strip.text = element_text(size=16, face=\"bold\"),\n        strip.background = element_blank(),\n        legend.key.size = unit(2,\"line\"),\n        legend.key.width = unit(3,\"line\"),\n        legend.text = element_text(size=16, face=\"bold\"),\n        legend.title = element_text(size=18, face=\"bold\"),\n        axis.title.x = element_text(size=18, face=\"bold\"),\n        axis.title.y = element_text(size=22, face=\"bold\"),\n        axis.text.x = element_text(face=\"bold\", size=15, vjust=0.5, \n                                   hjust=0.5, angle=0),\n        axis.text.y = element_text(size=10, face=\"bold\"),\n        plot.title = element_text(size=10, face=\"bold\"),\n        legend.spacing = unit(4, \"cm\"), \n        legend.margin = margin(t = 2, b = 1))\n\n\n\n\n\nFigure 2: Figure summarizes the serotypes and timiming of FMDV sampled from animals listed along vertical axis. More than one point on a line indicates multiple infections were detected."
  },
  {
    "objectID": "entanglement.html#read-gene-trees",
    "href": "entanglement.html#read-gene-trees",
    "title": "Entanglement",
    "section": "Read Gene Trees",
    "text": "Read Gene Trees\nSegment specific phylogenies. Note that the_rev subfix indicates that the original Nexus files were revised to swap tip labels for names in the description block (see, preprocessing)\n\n\nShow code\n# phylogeny list from directory\ntree_files <- list.files(here(\"local/paktrees\"), pattern=\"_rev\\\\.nex$\")\n\n# read ML trees & convert\nIRES_Lpro.tree <- read.nexus(here(\"local/paktrees\", tree_files[8]))\nIRES_Lpro.den <- get_dendro(\n  extract_subtree(IRES_Lpro.tree))\n\nseg_2C.tree <- read.nexus(here(\"local/paktrees\", tree_files[1]))\nseg_2C.den <- get_dendro(\n  extract_subtree(seg_2C.tree))\n\nseg_3A.tree <- read.nexus(here(\"local/paktrees\", tree_files[2]))\nseg_3A.den <- get_dendro(\n  extract_subtree(seg_3A.tree))\n\nseg_3C.tree <- read.nexus(here(\"local/paktrees\", tree_files[3]))\nseg_3C.den <- get_dendro(\n  extract_subtree(seg_3C.tree))\n\nseg_3D.tree <- read.nexus(here(\"local/paktrees\", tree_files[4]))\nseg_3D.den <- get_dendro(\n  extract_subtree(seg_3D.tree))"
  },
  {
    "objectID": "entanglement.html#compare-entanglement",
    "href": "entanglement.html#compare-entanglement",
    "title": "Entanglement",
    "section": "Compare Entanglement",
    "text": "Compare Entanglement\nEntanglement scores range from 0.00 - 1.00 with a values of 0.00 indicating the trees are exactly the same and a score of 1.00 indicating they are opposites. Essentially, the score can be interpreted as a proportion or percent change.\nTable to summarize comparisons\n\n\nHide code\nentangle_tab <- as.data.frame(matrix(nrow = 10, ncol = 2))\nnames(entangle_tab) <- c(\"Compared\", \"Score\")\n\n\n\nSelect tabs to view comparisons\n\nIRES_Lpro vs. 2CIRES_Lpro vs. 3AIRES_Lpro vs. 3CIRES_Lpro vs. 3D2C vs. 3A2C vs. 3C2C vs. 3D3A vs. 3C3A vs. 3D3C vs. 3D\n\n\n\n\nHide code\ndends <- dendlist(IRES_Lpro.den, seg_2C.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[1] <- \"IRES_Lpro vs. 2C\"\nentangle_tab$Score[1] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"IRES_Lpro\",\n                      cex_main_left = 4,\n                      main_right = \"2C\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nHide code\ndends <- dendlist(IRES_Lpro.den, seg_3A.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[2] <- \"IRES_Lpro vs. 3A\"\nentangle_tab$Score[2] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"IRES_Lpro\",\n                      cex_main_left = 4,\n                      main_right = \"3A\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nHide code\ndends <- dendlist(IRES_Lpro.den, seg_3C.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[3] <- \"IRES_Lpro vs. 3C\"\nentangle_tab$Score[3] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"IRES_Lpro\",\n                      cex_main_left = 4,\n                      main_right = \"3C\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nHide code\ndends <- dendlist(IRES_Lpro.den, seg_3D.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[4] <- \"IRES_Lpro vs. 3D\"\nentangle_tab$Score[4] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"IRES_Lpro\",\n                      cex_main_left = 4,\n                      main_right = \"3D\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nHide code\ndends <- dendlist(seg_2C.den, seg_3A.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[5] <- \"2C vs. 3A\"\nentangle_tab$Score[5] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"2C\",\n                      cex_main_left = 4,\n                      main_right = \"3A\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nHide code\ndends <- dendlist(seg_2C.den, seg_3C.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[6] <- \"2C vs. 3C\"\nentangle_tab$Score[6] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"2C\",\n                      cex_main_left = 4,\n                      main_right = \"3C\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nHide code\ndends <- dendlist(seg_2C.den, seg_3D.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[7] <- \"2C vs. 3D\"\nentangle_tab$Score[7] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"2C\",\n                      cex_main_left = 4,\n                      main_right = \"3D\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nHide code\ndends <- dendlist(seg_3A.den, seg_3C.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[8] <- \"3A vs. 3C\"\nentangle_tab$Score[8] <- entang_score\n\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"3A\",\n                      cex_main_left = 4,\n                      main_right = \"3C\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nHide code\ndends <- dendlist(seg_3A.den, seg_3D.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[9] <- \"3A vs. 3D\"\nentangle_tab$Score[9] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"3A\",\n                      cex_main_left = 4,\n                      main_right = \"3D\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nHide code\ndends <- dendlist(seg_3C.den, seg_3D.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[10] <- \"3C vs. 3D\"\nentangle_tab$Score[10] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"3C\",\n                      cex_main_left = 4,\n                      main_right = \"3D\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\n\nHide code\nentangle_tab %>%\n  gt() %>%\n  tab_header(\n    title = md(\"Entanglement Summary\")) %>%\n  tab_options(table.font.size = 10,\n              row_group.font.size = 10,\n              stub.font.size = 10,\n              column_labels.font.size = 12,\n              heading.title.font.size = 16,\n              heading.title.font.weight = \"bold\",\n              column_labels.font.weight = \"bold\")\n\n\n\n\n\n\n  \n    \n      Entanglement Summary\n\n    \n    \n    \n      Compared\n      Score\n    \n  \n  \n    IRES_Lpro vs. 2C\n0.61\n    IRES_Lpro vs. 3A\n0.32\n    IRES_Lpro vs. 3C\n0.70\n    IRES_Lpro vs. 3D\n0.39\n    2C vs. 3A\n0.59\n    2C vs. 3C\n0.51\n    2C vs. 3D\n0.59\n    3A vs. 3C\n0.83\n    3A vs. 3D\n0.20\n    3C vs. 3D\n0.78"
  },
  {
    "objectID": "entanglement.html#entanglement",
    "href": "entanglement.html#entanglement",
    "title": "Entanglement",
    "section": "Entanglement",
    "text": "Entanglement\nEntanglement scores range from 0.00 - 1.00 with a values of 0.00 indicating the trees are exactly the same and a score of 1.00 indicating they are opposites. Essentially, the score can be interpreted as a proportion or percent change.\nTable to summarize comparisons\n\n\nShow code\nentangle_tab <- as.data.frame(matrix(nrow = 10, ncol = 2))\nnames(entangle_tab) <- c(\"Compared\", \"Score\")\n\n\n\nSelect tabs to view comparisons\n\nIRES_Lpro vs. 2CIRES_Lpro vs. 3AIRES_Lpro vs. 3CIRES_Lpro vs. 3D2C vs. 3A2C vs. 3C2C vs. 3D3A vs. 3C3A vs. 3D3C vs. 3D\n\n\n\n\nShow code\ndends <- dendlist(IRES_Lpro.den, seg_2C.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[1] <- \"IRES_Lpro vs. 2C\"\nentangle_tab$Score[1] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"IRES_Lpro\",\n                      cex_main_left = 4,\n                      main_right = \"2C\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nShow code\ndends <- dendlist(IRES_Lpro.den, seg_3A.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[2] <- \"IRES_Lpro vs. 3A\"\nentangle_tab$Score[2] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"IRES_Lpro\",\n                      cex_main_left = 4,\n                      main_right = \"3A\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nShow code\ndends <- dendlist(IRES_Lpro.den, seg_3C.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[3] <- \"IRES_Lpro vs. 3C\"\nentangle_tab$Score[3] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"IRES_Lpro\",\n                      cex_main_left = 4,\n                      main_right = \"3C\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nShow code\ndends <- dendlist(IRES_Lpro.den, seg_3D.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[4] <- \"IRES_Lpro vs. 3D\"\nentangle_tab$Score[4] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"IRES_Lpro\",\n                      cex_main_left = 4,\n                      main_right = \"3D\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nShow code\ndends <- dendlist(seg_2C.den, seg_3A.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[5] <- \"2C vs. 3A\"\nentangle_tab$Score[5] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"2C\",\n                      cex_main_left = 4,\n                      main_right = \"3A\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nShow code\ndends <- dendlist(seg_2C.den, seg_3C.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[6] <- \"2C vs. 3C\"\nentangle_tab$Score[6] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"2C\",\n                      cex_main_left = 4,\n                      main_right = \"3C\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nShow code\ndends <- dendlist(seg_2C.den, seg_3D.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[7] <- \"2C vs. 3D\"\nentangle_tab$Score[7] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"2C\",\n                      cex_main_left = 4,\n                      main_right = \"3D\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nShow code\ndends <- dendlist(seg_3A.den, seg_3C.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[8] <- \"3A vs. 3C\"\nentangle_tab$Score[8] <- entang_score\n\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"3A\",\n                      cex_main_left = 4,\n                      main_right = \"3C\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nShow code\ndends <- dendlist(seg_3A.den, seg_3D.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[9] <- \"3A vs. 3D\"\nentangle_tab$Score[9] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"3A\",\n                      cex_main_left = 4,\n                      main_right = \"3D\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)\n\n\n\n\n\n\n\n\n\nShow code\ndends <- dendlist(seg_3C.den, seg_3D.den)\nentang_score <- round(entanglement(dends), 2)\n\nentangle_tab$Compared[10] <- \"3C vs. 3D\"\nentangle_tab$Score[10] <- entang_score\n\nx <- dends %>% dendextend::untangle(method = \"step2side\") \n\nx %>% set(\"rank_branches\") %>%\n      set(\"branches_lwd\", 1.5) %>%\n      set(\"branches_col\", value = c(\"gray40\")) %>%\n           tanglegram(main_left = \"3C\",\n                      cex_main_left = 4,\n                      main_right = \"3D\",\n                      cex_main_right = 4,\n                      columns_width = c(5,0.5,5),\n                      lwd = 1.8,\n                      lab.cex = 0.8,\n                      dLeaf_left = -0.15,\n                      dLeaf_right = 0.15,\n                      margin_outer = 4,\n                      margin_inner = 10,\n                      color_lines = tol(12), \n                      axes=FALSE,\n                      sub = paste(\"Entanglement:\", entang_score),\n                      common_subtrees_color_branches = FALSE)"
  },
  {
    "objectID": "entanglement.html#entanglement-scores",
    "href": "entanglement.html#entanglement-scores",
    "title": "Entanglement",
    "section": "Entanglement Scores",
    "text": "Entanglement Scores\n\n\nShow code\nentangle_tab %>%\n  gt() %>%\n  tab_header(\n    title = md(\"Score Summary\")) %>%\n  cols_width(everything() ~ px(150)) %>%\n   tab_options(table.font.size = \"small\",\n              row_group.font.size = \"small\",\n              stub.font.size = \"small\",\n              column_labels.font.size = \"medium\",\n              heading.title.font.size = \"large\",\n              data_row.padding = px(2),\n              heading.title.font.weight = \"bold\",\n              column_labels.font.weight = \"bold\") %>%\n  opt_stylize(style = 6, color = 'gray')\n\n\n\n\n\n  \n  \n  \n    \n    \n  \n  \n    \n      Score Summary\n\n    \n    \n    \n      Compared\n      Score\n    \n  \n  \n    IRES_Lpro vs. 2C\n0.65\n    IRES_Lpro vs. 3A\n0.32\n    IRES_Lpro vs. 3C\n0.67\n    IRES_Lpro vs. 3D\n0.39\n    2C vs. 3A\n0.63\n    2C vs. 3C\n0.57\n    2C vs. 3D\n0.62\n    3A vs. 3C\n0.80\n    3A vs. 3D\n0.20\n    3C vs. 3D\n0.74"
  },
  {
    "objectID": "preprocessing.html",
    "href": "preprocessing.html",
    "title": "Preprocessing",
    "section": "",
    "text": "``"
  },
  {
    "objectID": "time_tree.html#time-calibrated-phylogenies",
    "href": "time_tree.html#time-calibrated-phylogenies",
    "title": "Time Calibrated Phylogenies",
    "section": "Time Calibrated Phylogenies",
    "text": "Time Calibrated Phylogenies\n\nSerotype A\nCheck tree model statistics the get_tracer_stats() function calculates similar summary statistics as the Tracer software typically used with BEAST.\n\n\nHide code\ncheck_stats <- get_tracer_stats(here(\"local/beast/a_1/As_rev.log\"))\n\nkeep_stats <- c(\"joint\", \"prior\", \"likelihood\", \"treeModel.rootHeight\", \"age.root.\",\n                \"treeLength\", \"tmrca.fmd_a_rev.\", \"clock.rate\")\n\ncheck_stats %>%\n  filter(Parameter %in% keep_stats) %>%\n  gt() %>%\n  tab_header(\n    title = md(\"Serotype A Stats\")) %>%\n  cols_width(starts_with(\"Parameter\") ~ px(200),\n             starts_with(\"label\") ~ px(60),\n             everything() ~ px(95)) %>%\n  tab_options(table.font.size = \"small\",\n              row_group.font.size = \"small\",\n              stub.font.size = \"small\",\n              column_labels.font.size = \"medium\",\n              heading.title.font.size = \"large\",\n              data_row.padding = px(2),\n              heading.title.font.weight = \"bold\",\n              column_labels.font.weight = \"bold\") %>%\n  opt_stylize(style = 6, color = 'gray')\n\n\n\n\n\n  \n  \n  \n    \n    \n    \n    \n    \n    \n  \n  \n    \n      Serotype A Stats\n\n    \n    \n    \n      Parameter\n      Mean\n      Median\n      Q_0.025\n      Q_0.975\n      ESS\n    \n  \n  \n    joint\n-5625.950\n-5624.828\n-5647.862\n-5610.792\n1380\n    prior\n-76.426\n-75.418\n-96.610\n-62.129\n1155\n    likelihood\n-5549.524\n-5549.135\n-5560.279\n-5540.950\n23420\n    treeModel.rootHeight\n15.255\n13.950\n9.710\n28.080\n816\n    age.root.\n1997.688\n1998.992\n1984.863\n2003.232\n816\n    treeLength\n65.001\n58.191\n37.203\n130.643\n809\n    tmrca.fmd_a_rev.\n15.255\n13.950\n9.710\n28.080\n816\n    clock.rate\n0.005\n0.005\n0.002\n0.007\n1395\n  \n  \n  \n\n\n\n\n\nLoad MCC tree\n\n\nHide code\nsero_A.tree <- read.nexus(here(\"local/beast/a_1/As.mcc.tre\"))\n\nplot_time_tree(sero_A.tree, check_stats)\n\n\n\n\n\nFMDV Effective Population Size\nTrees were run using several different clock and prior choices, all showed flat-line Ne. The one here was the simplest, coalescent with contant population size.\n\n\nHide code\nphylodynamic_process(sero_A.tree, check_stats, x_limits = c(\"2011-01-01\", \"2013-01-01\"))\n\n\n\n\n\n\n\nSerotype Asia1\n\n\nHide code\ncheck_stats <- get_tracer_stats(here(\"local/beast/asia1_1/Asia1s.log\"))\n\nkeep_stats <- c(\"joint\", \"prior\", \"likelihood\", \"treeModel.rootHeight\", \"age.root.\",\n                \"treeLength\", \"tmrca.fmd_a_rev.\", \"clock.rate\")\n\ncheck_stats %>%\n  filter(Parameter %in% keep_stats) %>%\n  gt() %>%\n  tab_header(\n    title = md(\"Serotype Asia1 Stats\")) %>%\n  cols_width(starts_with(\"Parameter\") ~ px(200),\n             starts_with(\"label\") ~ px(60),\n             everything() ~ px(95)) %>%\n  tab_options(table.font.size = \"small\",\n              row_group.font.size = \"small\",\n              stub.font.size = \"small\",\n              column_labels.font.size = \"medium\",\n              heading.title.font.size = \"large\",\n              data_row.padding = px(2),\n              heading.title.font.weight = \"bold\",\n              column_labels.font.weight = \"bold\") %>%\n  opt_stylize(style = 6, color = 'gray')\n\n\n\n\n\n  \n  \n  \n    \n    \n    \n    \n    \n    \n  \n  \n    \n      Serotype Asia1 Stats\n\n    \n    \n    \n      Parameter\n      Mean\n      Median\n      Q_0.025\n      Q_0.975\n      ESS\n    \n  \n  \n    joint\n-6003.184\n-6002.404\n-6033.565\n-5977.100\n1045\n    prior\n-182.388\n-181.940\n-213.118\n-154.307\n714\n    likelihood\n-5820.797\n-5820.458\n-5838.825\n-5805.294\n2037\n    treeModel.rootHeight\n11.511\n11.411\n9.980\n13.638\n969\n    age.root.\n2005.650\n2005.751\n2003.524\n2007.182\n969\n    treeLength\n51.824\n50.974\n39.204\n69.562\n716\n    clock.rate\n0.004\n0.004\n0.003\n0.006\n586\n  \n  \n  \n\n\n\n\n\nLoad MCC tree\n\n\nHide code\nsero_Asia1.tree <- read.nexus(here(\"local/beast/asia1_1/asia1.mcc.tre\")) \nplot_time_tree(sero_Asia1.tree, check_stats, legend_pos = c(0.2, 0.5))\n\n\n\n\n\nFMDV Effective Population Size\nFlat Ne, like the other serotypes\n\n\nHide code\nphylodynamic_process(sero_Asia1.tree, check_stats, x_limits = c(\"2011-01-01\", \"2013-01-01\"))\n\n\n\n\n\n\n\nSerotype O\n\n\nHide code\ncheck_stats <- get_tracer_stats(here(\"local/beast/o_1/sero_0.log\"))\n\nkeep_stats <- c(\"joint\", \"prior\", \"likelihood\", \"treeModel.rootHeight\", \"age.root.\",\n                \"treeLength\", \"tmrca.fmd_a_rev.\", \"clock.rate\")\n\ncheck_stats %>%\n  filter(Parameter %in% keep_stats) %>%\n  gt() %>%\n  tab_header(\n    title = md(\"Serotype O Stats\")) %>%\n  cols_width(starts_with(\"Parameter\") ~ px(200),\n             starts_with(\"label\") ~ px(60),\n             everything() ~ px(95)) %>%\n  tab_options(table.font.size = \"small\",\n              row_group.font.size = \"small\",\n              stub.font.size = \"small\",\n              column_labels.font.size = \"medium\",\n              heading.title.font.size = \"large\",\n              data_row.padding = px(2),\n              heading.title.font.weight = \"bold\",\n              column_labels.font.weight = \"bold\") %>%\n  opt_stylize(style = 6, color = 'gray')\n\n\n\n\n\n  \n  \n  \n    \n    \n    \n    \n    \n    \n  \n  \n    \n      Serotype O Stats\n\n    \n    \n    \n      Parameter\n      Mean\n      Median\n      Q_0.025\n      Q_0.975\n      ESS\n    \n  \n  \n    joint\n-5209.488\n-5208.762\n-5226.241\n-5197.209\n3568\n    prior\n-75.522\n-74.950\n-89.019\n-65.512\n2568\n    likelihood\n-5133.966\n-5133.702\n-5145.086\n-5124.659\n8002\n    treeModel.rootHeight\n15.158\n14.650\n11.776\n21.363\n2294\n    age.root.\n2000.962\n2001.470\n1994.757\n2004.345\n2294\n    treeLength\n51.497\n49.341\n38.452\n77.114\n2042\n    clock.rate\n0.004\n0.004\n0.003\n0.005\n2758\n  \n  \n  \n\n\n\n\n\nLoad MCC tree\n\n\nHide code\nsero_O.tree <- read.nexus(here(\"local/beast/o_1/Os.mcc.tre\"))\n\nplot_time_tree(sero_O.tree, check_stats, legend_pos = c(0.2, 0.5))\n\n\n\n\n\nFMDV Effective Population Size\nFlat Ne, like the other serotypes\n\n\nHide code\nphylodynamic_process(sero_O.tree, check_stats, x_limits = c(\"2011-01-01\", \"2013-01-01\"))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Overview",
    "section": "",
    "text": "Under Active Development\n\n\n\nThe tabs across the top of this webpage can be navigated to view various exploratory analyses examining FMDV co-infection and recombination dynamics in water buffalo. The code, data, and analyses on this site have not been verified or validated and are subject to change."
  },
  {
    "objectID": "time_tree.html#serotype-a",
    "href": "time_tree.html#serotype-a",
    "title": "Time Calibrated Phylogenies",
    "section": "Serotype A",
    "text": "Serotype A\nCheck tree model statistics the get_tracer_stats() function calculates similar summary statistics as the Tracer software typically used with BEAST.\n\n\nHide code\ncheck_stats <- get_tracer_stats(here(\"local/beast/a_1/As_rev.log\"))\n\nkeep_stats <- c(\"joint\", \"prior\", \"likelihood\", \"treeModel.rootHeight\", \"age.root.\",\n                \"treeLength\", \"tmrca.fmd_a_rev.\", \"clock.rate\")\n\ncheck_stats %>%\n  filter(Parameter %in% keep_stats) %>%\n  gt() %>%\n  tab_header(\n    title = md(\"Serotype A Stats\")) %>%\n  cols_width(starts_with(\"Parameter\") ~ px(200),\n             starts_with(\"label\") ~ px(60),\n             everything() ~ px(95)) %>%\n  tab_options(table.font.size = \"small\",\n              row_group.font.size = \"small\",\n              stub.font.size = \"small\",\n              column_labels.font.size = \"medium\",\n              heading.title.font.size = \"large\",\n              data_row.padding = px(2),\n              heading.title.font.weight = \"bold\",\n              column_labels.font.weight = \"bold\") %>%\n  opt_stylize(style = 6, color = 'gray')\n\n\n\n\n\n  \n  \n  \n    \n    \n    \n    \n    \n    \n  \n  \n    \n      Serotype A Stats\n\n    \n    \n    \n      Parameter\n      Mean\n      Median\n      Q_0.025\n      Q_0.975\n      ESS\n    \n  \n  \n    joint\n-5625.950\n-5624.828\n-5647.862\n-5610.792\n1380\n    prior\n-76.426\n-75.418\n-96.610\n-62.129\n1155\n    likelihood\n-5549.524\n-5549.135\n-5560.279\n-5540.950\n23420\n    treeModel.rootHeight\n15.255\n13.950\n9.710\n28.080\n816\n    age.root.\n1997.688\n1998.992\n1984.863\n2003.232\n816\n    treeLength\n65.001\n58.191\n37.203\n130.643\n809\n    tmrca.fmd_a_rev.\n15.255\n13.950\n9.710\n28.080\n816\n    clock.rate\n0.005\n0.005\n0.002\n0.007\n1395\n  \n  \n  \n\n\n\n\n\nLoad MCC tree\n\n\nHide code\nsero_A.tree <- read.nexus(here(\"local/beast/a_1/As.mcc.tre\"))\n\nplot_time_tree(sero_A.tree, check_stats)\n\n\n\n\n\nFMDV Effective Population Size\nTrees were run using several different clock and prior choices, all showed flat-line Ne. The one here was the simplest, coalescent with contant population size.\n\n\nHide code\nphylodynamic_process(sero_A.tree, check_stats, x_limits = c(\"2011-01-01\", \"2013-01-01\"))"
  },
  {
    "objectID": "time_tree.html#serotype-asia1",
    "href": "time_tree.html#serotype-asia1",
    "title": "Time Calibrated Phylogenies",
    "section": "Serotype Asia1",
    "text": "Serotype Asia1\n\n\nHide code\ncheck_stats <- get_tracer_stats(here(\"local/beast/asia1_1/Asia1s.log\"))\n\nkeep_stats <- c(\"joint\", \"prior\", \"likelihood\", \"treeModel.rootHeight\", \"age.root.\",\n                \"treeLength\", \"tmrca.fmd_a_rev.\", \"clock.rate\")\n\ncheck_stats %>%\n  filter(Parameter %in% keep_stats) %>%\n  gt() %>%\n  tab_header(\n    title = md(\"Serotype Asia1 Stats\")) %>%\n  cols_width(starts_with(\"Parameter\") ~ px(200),\n             starts_with(\"label\") ~ px(60),\n             everything() ~ px(95)) %>%\n  tab_options(table.font.size = \"small\",\n              row_group.font.size = \"small\",\n              stub.font.size = \"small\",\n              column_labels.font.size = \"medium\",\n              heading.title.font.size = \"large\",\n              data_row.padding = px(2),\n              heading.title.font.weight = \"bold\",\n              column_labels.font.weight = \"bold\") %>%\n  opt_stylize(style = 6, color = 'gray')\n\n\n\n\n\n  \n  \n  \n    \n    \n    \n    \n    \n    \n  \n  \n    \n      Serotype Asia1 Stats\n\n    \n    \n    \n      Parameter\n      Mean\n      Median\n      Q_0.025\n      Q_0.975\n      ESS\n    \n  \n  \n    joint\n-6003.184\n-6002.404\n-6033.565\n-5977.100\n1045\n    prior\n-182.388\n-181.940\n-213.118\n-154.307\n714\n    likelihood\n-5820.797\n-5820.458\n-5838.825\n-5805.294\n2037\n    treeModel.rootHeight\n11.511\n11.411\n9.980\n13.638\n969\n    age.root.\n2005.650\n2005.751\n2003.524\n2007.182\n969\n    treeLength\n51.824\n50.974\n39.204\n69.562\n716\n    clock.rate\n0.004\n0.004\n0.003\n0.006\n586\n  \n  \n  \n\n\n\n\n\nLoad MCC tree\n\n\nHide code\nsero_Asia1.tree <- read.nexus(here(\"local/beast/asia1_1/asia1.mcc.tre\")) \nplot_time_tree(sero_Asia1.tree, check_stats, legend_pos = c(0.2, 0.5))\n\n\n\n\n\nFMDV Effective Population Size\nFlat Ne, like the other serotypes\n\n\nHide code\nphylodynamic_process(sero_Asia1.tree, check_stats, x_limits = c(\"2011-01-01\", \"2013-01-01\"))"
  },
  {
    "objectID": "time_tree.html#serotype-o",
    "href": "time_tree.html#serotype-o",
    "title": "Time Calibrated Phylogenies",
    "section": "Serotype O",
    "text": "Serotype O\n\n\nHide code\ncheck_stats <- get_tracer_stats(here(\"local/beast/o_1/sero_0.log\"))\n\nkeep_stats <- c(\"joint\", \"prior\", \"likelihood\", \"treeModel.rootHeight\", \"age.root.\",\n                \"treeLength\", \"tmrca.fmd_a_rev.\", \"clock.rate\")\n\ncheck_stats %>%\n  filter(Parameter %in% keep_stats) %>%\n  gt() %>%\n  tab_header(\n    title = md(\"Serotype O Stats\")) %>%\n  cols_width(starts_with(\"Parameter\") ~ px(200),\n             starts_with(\"label\") ~ px(60),\n             everything() ~ px(95)) %>%\n  tab_options(table.font.size = \"small\",\n              row_group.font.size = \"small\",\n              stub.font.size = \"small\",\n              column_labels.font.size = \"medium\",\n              heading.title.font.size = \"large\",\n              data_row.padding = px(2),\n              heading.title.font.weight = \"bold\",\n              column_labels.font.weight = \"bold\") %>%\n  opt_stylize(style = 6, color = 'gray')\n\n\n\n\n\n  \n  \n  \n    \n    \n    \n    \n    \n    \n  \n  \n    \n      Serotype O Stats\n\n    \n    \n    \n      Parameter\n      Mean\n      Median\n      Q_0.025\n      Q_0.975\n      ESS\n    \n  \n  \n    joint\n-5209.488\n-5208.762\n-5226.241\n-5197.209\n3568\n    prior\n-75.522\n-74.950\n-89.019\n-65.512\n2568\n    likelihood\n-5133.966\n-5133.702\n-5145.086\n-5124.659\n8002\n    treeModel.rootHeight\n15.158\n14.650\n11.776\n21.363\n2294\n    age.root.\n2000.962\n2001.470\n1994.757\n2004.345\n2294\n    treeLength\n51.497\n49.341\n38.452\n77.114\n2042\n    clock.rate\n0.004\n0.004\n0.003\n0.005\n2758\n  \n  \n  \n\n\n\n\n\nLoad MCC tree\n\n\nHide code\nsero_O.tree <- read.nexus(here(\"local/beast/o_1/Os.mcc.tre\"))\n\nplot_time_tree(sero_O.tree, check_stats, legend_pos = c(0.2, 0.5))\n\n\n\n\n\nFMDV Effective Population Size\nFlat Ne, like the other serotypes\n\n\nHide code\nphylodynamic_process(sero_O.tree, check_stats, x_limits = c(\"2011-01-01\", \"2013-01-01\"))"
  }
]